//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmadeusWS.ConnectorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionTicketInfo", Namespace="http://schemas.datacontract.org/2004/07/GlobalReservation.Models.Web.Booking")]
    [System.SerializableAttribute()]
    public partial class TransactionTicketInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AirlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AirlineFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountDueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseFareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAffiliateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EpayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalFareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Airline {
            get {
                return this.AirlineField;
            }
            set {
                if ((object.ReferenceEquals(this.AirlineField, value) != true)) {
                    this.AirlineField = value;
                    this.RaisePropertyChanged("Airline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AirlineFee {
            get {
                return this.AirlineFeeField;
            }
            set {
                if ((this.AirlineFeeField.Equals(value) != true)) {
                    this.AirlineFeeField = value;
                    this.RaisePropertyChanged("AirlineFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountDue {
            get {
                return this.AmountDueField;
            }
            set {
                if ((this.AmountDueField.Equals(value) != true)) {
                    this.AmountDueField = value;
                    this.RaisePropertyChanged("AmountDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseFare {
            get {
                return this.BaseFareField;
            }
            set {
                if ((this.BaseFareField.Equals(value) != true)) {
                    this.BaseFareField = value;
                    this.RaisePropertyChanged("BaseFare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionAffiliate {
            get {
                return this.CommissionAffiliateField;
            }
            set {
                if ((this.CommissionAffiliateField.Equals(value) != true)) {
                    this.CommissionAffiliateField = value;
                    this.RaisePropertyChanged("CommissionAffiliate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionAgency {
            get {
                return this.CommissionAgencyField;
            }
            set {
                if ((this.CommissionAgencyField.Equals(value) != true)) {
                    this.CommissionAgencyField = value;
                    this.RaisePropertyChanged("CommissionAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionPercent {
            get {
                return this.CommissionPercentField;
            }
            set {
                if ((this.CommissionPercentField.Equals(value) != true)) {
                    this.CommissionPercentField = value;
                    this.RaisePropertyChanged("CommissionPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Epay {
            get {
                return this.EpayField;
            }
            set {
                if ((object.ReferenceEquals(this.EpayField, value) != true)) {
                    this.EpayField = value;
                    this.RaisePropertyChanged("Epay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Markup {
            get {
                return this.MarkupField;
            }
            set {
                if ((this.MarkupField.Equals(value) != true)) {
                    this.MarkupField = value;
                    this.RaisePropertyChanged("Markup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Taxes {
            get {
                return this.TaxesField;
            }
            set {
                if ((this.TaxesField.Equals(value) != true)) {
                    this.TaxesField = value;
                    this.RaisePropertyChanged("Taxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketNumber {
            get {
                return this.TicketNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNumberField, value) != true)) {
                    this.TicketNumberField = value;
                    this.RaisePropertyChanged("TicketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalFare {
            get {
                return this.TotalFareField;
            }
            set {
                if ((this.TotalFareField.Equals(value) != true)) {
                    this.TotalFareField = value;
                    this.RaisePropertyChanged("TotalFare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectorService.IConnector")]
    public interface IConnector {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/CreateBooking", ReplyAction="http://tempuri.org/IConnector/CreateBookingResponse")]
        int CreateBooking(int siteItemId, int userId, string amadeusResponseXml, bool sendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/GetPNRS_XML", ReplyAction="http://tempuri.org/IConnector/GetPNRS_XMLResponse")]
        string GetPNRS_XML(int siteItemId, System.DateTime startDate, System.DateTime endDate, int robotUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/UpdateTransaction", ReplyAction="http://tempuri.org/IConnector/UpdateTransactionResponse")]
        void UpdateTransaction(int transactionId, int userId, int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/UpdateTransaction1", ReplyAction="http://tempuri.org/IConnector/UpdateTransaction1Response")]
        void UpdateTransaction1(int transactionId, int userId, int statusId, decimal airpenalty, decimal agencyfee, System.DateTime invoicedate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/UpdateTransactionEmail", ReplyAction="http://tempuri.org/IConnector/UpdateTransactionEmailResponse")]
        void UpdateTransactionEmail(int transactionId, int userId, int statusId, bool sendEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/CreateTransactionTicket", ReplyAction="http://tempuri.org/IConnector/CreateTransactionTicketResponse")]
        void CreateTransactionTicket(int userId, AmadeusWS.ConnectorService.TransactionTicketInfo ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnector/GetPendingBookings", ReplyAction="http://tempuri.org/IConnector/GetPendingBookingsResponse")]
        string GetPendingBookings();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectorChannel : AmadeusWS.ConnectorService.IConnector, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectorClient : System.ServiceModel.ClientBase<AmadeusWS.ConnectorService.IConnector>, AmadeusWS.ConnectorService.IConnector {
        
        public ConnectorClient() {
        }
        
        public ConnectorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConnectorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateBooking(int siteItemId, int userId, string amadeusResponseXml, bool sendEmail) {
            return base.Channel.CreateBooking(siteItemId, userId, amadeusResponseXml, sendEmail);
        }
        
        public string GetPNRS_XML(int siteItemId, System.DateTime startDate, System.DateTime endDate, int robotUserId) {
            return base.Channel.GetPNRS_XML(siteItemId, startDate, endDate, robotUserId);
        }
        
        public void UpdateTransaction(int transactionId, int userId, int statusId) {
            base.Channel.UpdateTransaction(transactionId, userId, statusId);
        }
        
        public void UpdateTransaction1(int transactionId, int userId, int statusId, decimal airpenalty, decimal agencyfee, System.DateTime invoicedate) {
            base.Channel.UpdateTransaction1(transactionId, userId, statusId, airpenalty, agencyfee, invoicedate);
        }
        
        public void UpdateTransactionEmail(int transactionId, int userId, int statusId, bool sendEmail) {
            base.Channel.UpdateTransactionEmail(transactionId, userId, statusId, sendEmail);
        }
        
        public void CreateTransactionTicket(int userId, AmadeusWS.ConnectorService.TransactionTicketInfo ticket) {
            base.Channel.CreateTransactionTicket(userId, ticket);
        }
        
        public string GetPendingBookings() {
            return base.Channel.GetPendingBookings();
        }
    }
}
